// Test if crypto.randomUUID() could generate the same ID
console.log('Testing UUID generation:\n')

const testId = 'c58846a3-da47-42e1-a206-cd2a9cdd5b44'

// Generate some UUIDs to see if we get the same one
const uuids = []
for (let i = 0; i < 10; i++) {
  const uuid = crypto.randomUUID()
  uuids.push(uuid)
  if (uuid === testId) {
    console.log(`⚠️  Generated the same UUID at iteration ${i}!`)
  }
}

console.log('Generated UUIDs:')
uuids.forEach((uuid, i) => console.log(`${i + 1}. ${uuid}`))

console.log('\nAll UUIDs are unique:', new Set(uuids).size === uuids.length)

// Check if the ID has a special pattern
console.log('\n=== ANALYZING THE MYSTERY ID ===')
console.log('ID: c58846a3-da47-42e1-a206-cd2a9cdd5b44')
console.log('This looks like a valid UUID v4')
console.log('It was probably generated by crypto.randomUUID()')
console.log('But WHERE and WHY is it being reused for all entities?')